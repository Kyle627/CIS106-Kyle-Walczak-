#include <iostream>
#include <string>
using namespace std;

string getThousands(int number);
string getHundreds(int number);
string getTens(int number);
string getOnes(int number);

int main() {
    int number;
    string thousands, hundreds, tens, ones;
    cout << "Enter the whole number less than 4,000 you wish to convert: ";
    cin >> number;

    if (number <= 0 || number >= 4000) {
        cout << "Number must be between 1 and 3999." << endl;
        return 1;
    }

    thousands = getThousands(number);
    hundreds = getHundreds(number);
    tens = getTens(number);
    ones = getOnes(number);

    cout << "The roman numeral is " << thousands << hundreds << tens << ones;
    return 0;
}
string getThousands(int number) {
    string thousands[] = {"", "M", "MM", "MMM"};
    return thousands[number / 1000];
}

string getHundreds(int number) {
    string hundreds[] = {"", "C", "CC", "CCC", "CD",
                         "D", "DC", "DCC", "DCCC", "CM"};
    return hundreds[(number % 1000) / 100];
}

string getTens(int number) {
    string tens[] = {"", "X", "XX", "XXX", "XL",
                     "L", "LX", "LXX", "LXXX", "XC"};
    return tens[(number % 100) / 10];
}

string getOnes(int number) {
    string ones[] = {"", "I", "II", "III", "IV",
                     "V", "VI", "VII", "VIII", "IX"};
    return ones[number % 10];
}
____________________________________________________________________________________

#include <iostream>
#include <string>
#include <iomanip>

using namespace std;

int main() {
    cout << "Report to the media\n";
    cout << "Event: Diving competition\n\n";

    int numDivers = 0;
    double finalScoreSum = 0.0;
    char continueInput;

    do {
        string diverName, diverCity;
        double scores[5], highestScore = 0.0, lowestScore = 10.0,
        totalScore = 0.0, degreeOfDifficulty, overallScore;

        cout << "Enter the diver's name: ";
        getline(cin, diverName);
        cout << "Enter the diver's city: ";
        getline(cin, diverCity);

        for (int i = 0; i < 5; ++i) {
            double score;
            do {
                cout << "Enter the score given by judge #" << (i + 1) <<": ";
                cin >> score;
                if (score < 0 || score > 10) {
                    cout << "Invalid score - Please reenter "
                            "(Valid Range: 0 - 10)\n";
                }
            } while (score < 0 || score > 10);

            totalScore += score;
            if (score > highestScore) highestScore = score;
            if (score < lowestScore) lowestScore = score;
        }

        do {
            cout << "What was the degree of difficulty? ";
            cin >> degreeOfDifficulty;
            if (degreeOfDifficulty < 1.00 || degreeOfDifficulty > 1.67) {
                cout << "Invalid degree of difficulty - "
                        "Please reenter (Valid Range: 1 - 1.67)\n";
            }
        } while (degreeOfDifficulty < 1.00 || degreeOfDifficulty > 1.67);

        totalScore -= (highestScore + lowestScore);
        overallScore = (totalScore / 3) * degreeOfDifficulty;

        cout << "\nDiver: " << diverName << ", City: " << diverCity << "\n";
        cout << "Overall score was " << fixed << setprecision(2)
        << overallScore << "\n\n";

        finalScoreSum += overallScore;
        numDivers++;

        cout << "Do you want to process another diver (Y/N)? ";
        cin >> continueInput;
        cin.ignore(); // To clear the newline character from the input buffer
        cout << "\n";
    } while (continueInput == 'Y' || continueInput == 'y');

    cout << setw(20) << "EVENT SUMMARY\n";
    cout << setw(20) << "-------------\n";
    cout << "Number of divers participating: " << numDivers << "\n";
    cout << "Average score of all divers: " << fixed << setprecision(2) <<
    (finalScoreSum / numDivers) << "\n";
    cout << "Press any key to continue \n";

    return 0;
}
_____________________________________________________________________________________________



